

declare (strict_types=1);
<?php if (isset($namespace)): ?>
namespace <?=$namespace?>;
<?php endif ?>

use Axtiva\FlexibleGraphql\Generator\Exception\NotImplementedResolver;
use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Resolver\ResolverInterface;
<?php foreach ($import_classes ?? [] as $import_class): ?>
use <?=$import_class?>;
<?php endforeach ?>

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * This is resolver for <?=$type_name?>.<?=$field_name?><?=PHP_EOL?>
<?php if (isset($field_description)): ?>
 * <?=$field_description?>
<?php endif ?>
 */
final class <?=$short_class_name?> implements ResolverInterface
{
    /**
     * @param <?php if (!empty($root_value_class)): ?><?=$root_value_class?> <?php endif ?>$rootValue
     * @param <?php if (!empty($field_args_class)): ?><?=$field_args_class?> <?php endif ?>$args
     * @param $context
     * @param ResolveInfo $info
     * @return <?php if (!empty($return_class)): ?><?=$return_class?><?php else: ?>mixed<?php endif ?>

     */
    public function __invoke($rootValue, $args, $context, ResolveInfo $info)
    {
        throw new NotImplementedResolver('Not implemented field resolver ' . __CLASS__);
    }
}