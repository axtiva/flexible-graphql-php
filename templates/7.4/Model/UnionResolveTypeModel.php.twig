<?php

declare (strict_types=1);
{% if namespace|length > 0 %}
namespace {{ namespace }};
{% endif %}

use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Resolver\UnionResolveTypeInterface;
{% for use in uses %}
use {{ use }};
{% endfor %}

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * and will be regenerated. Do not edit it manually
{% if description|length > 0 %}
 * {{ description }}
{% endif %}
 */
final class {{ short_class_name }} implements UnionResolveTypeInterface
{
    public function __invoke($model, $context, ResolveInfo $info)
    {
        if (isset($model)) {
            switch (get_class($model)) {
{% for model in models %}
                case {{ model.model }}::class:
                    return $info->schema->getType('{{ model.type }}');
{% endfor %}
            }
        }
        return null;
    }
}